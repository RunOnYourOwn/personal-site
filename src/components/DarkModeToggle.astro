---
// Dark mode toggle component
---

<button id="dark-mode-toggle" class="dark-mode-toggle" aria-label="Toggle dark mode">
  <svg class="sun-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg class="moon-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<script>
  // Dark mode functionality
  function initDarkMode() {
    const toggle = document.getElementById('dark-mode-toggle');
    const html = document.documentElement;
    
    // Check current state (already set by BaseHead script)
    const isDark = html.classList.contains('dark');
    
    // Update toggle button state
    updateToggleIcon(isDark);
    
    // Toggle function
    toggle.addEventListener('click', () => {
      const isCurrentlyDark = html.classList.contains('dark');
      
      console.log('Toggle clicked, currently dark:', isCurrentlyDark);
      
      if (isCurrentlyDark) {
        html.classList.remove('dark');
        localStorage.setItem('theme', 'light');
        updateToggleIcon(false);
        console.log('Switched to light mode');
      } else {
        html.classList.add('dark');
        localStorage.setItem('theme', 'dark');
        updateToggleIcon(true);
        console.log('Switched to dark mode');
      }
    });
  }
  
  function updateToggleIcon(isDark) {
    const sunIcon = document.querySelector('.sun-icon');
    const moonIcon = document.querySelector('.moon-icon');
    
    if (isDark) {
      sunIcon.style.display = 'none';
      moonIcon.style.display = 'block';
    } else {
      sunIcon.style.display = 'block';
      moonIcon.style.display = 'none';
    }
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initDarkMode);
  } else {
    initDarkMode();
  }
</script>

<style>
  .dark-mode-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    border-radius: 6px;
    color: rgb(var(--gray-dark));
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .dark-mode-toggle:hover {
    background: rgba(var(--gray-light), 0.5);
    color: rgb(var(--black));
  }
  
  .dark-mode-toggle:focus {
    outline: 2px solid var(--accent);
    outline-offset: 2px;
  }
  
  .sun-icon,
  .moon-icon {
    transition: opacity 0.2s ease;
  }
  
  .moon-icon {
    display: none;
  }
  
  @media (max-width: 720px) {
    .dark-mode-toggle {
      padding: 6px;
    }
  }
</style>
