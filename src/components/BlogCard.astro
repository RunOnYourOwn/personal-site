---
// BlogCard component for displaying blog post previews
import type { CollectionEntry } from 'astro:content';
import Card from './Card.astro';

interface Props {
  post: CollectionEntry<'blog'>;
  featured?: boolean;
}

const { post, featured = false } = Astro.props;
const { slug, data } = post;
const { title, description, pubDate, tags, heroImage } = data;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(date);
};
---

<Card
  href={`/blog/${slug}`}
  class={featured ? 'blog-card featured' : 'blog-card'}
>
  <div class="blog-card-image">
    {
      heroImage ? (
        <img
          src={heroImage.src}
          alt={heroImage.alt || title}
          loading="lazy"
          decoding="async"
        />
      ) : (
        <div class="blog-placeholder">
          <svg
            width="60"
            height="60"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1.5"
          >
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
            <polyline points="14,2 14,8 20,8" />
            <line x1="16" y1="13" x2="8" y2="13" />
            <line x1="16" y1="17" x2="8" y2="17" />
            <polyline points="10,9 9,9 8,9" />
          </svg>
        </div>
      )
    }
  </div>

  <div class="blog-card-content">
    <div class="blog-card-meta">
      <time datetime={pubDate.toISOString()}>
        {formatDate(pubDate)}
      </time>
      {
        tags.length > 0 && (
          <div class="blog-card-tags">
            {tags.slice(0, 3).map(tag => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )
      }
    </div>

    <h3 class="blog-card-title">{title}</h3>
    <p class="blog-card-description">{description}</p>

    <div class="blog-card-footer">
      <span class="read-more">Read more â†’</span>
    </div>
  </div>
</Card>

<style>
  .blog-card {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }

  .blog-card.featured {
    grid-column: span 2;
  }

  .blog-card-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }

  .blog-card.featured .blog-card-image {
    height: 300px;
  }

  .blog-card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s ease;
  }

  .blog-card:hover .blog-card-image img {
    transform: scale(1.05);
  }

  .blog-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-secondary);
    color: var(--text-secondary);
    border-radius: 0.5rem;
  }

  .blog-card:hover .blog-placeholder {
    background: var(--accent-light);
    color: var(--accent);
  }

  .blog-card-content {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .blog-card-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
    font-size: 0.875rem;
    color: var(--text-secondary);
  }

  .blog-card-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: var(--accent-light);
    color: var(--accent-dark);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .blog-card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 0.75rem 0;
    color: var(--text-primary);
    line-height: 1.3;
  }

  .blog-card.featured .blog-card-title {
    font-size: 1.5rem;
  }

  .blog-card-description {
    color: var(--text-secondary);
    line-height: 1.6;
    margin: 0 0 1rem 0;
    flex-grow: 1;
  }

  .blog-card-footer {
    margin-top: auto;
  }

  .read-more {
    color: var(--accent);
    font-weight: 500;
    font-size: 0.875rem;
  }

  /* Dark mode styles */
  :global(.dark) .blog-card-meta {
    color: rgb(156, 163, 175);
  }

  :global(.dark) .blog-card-title {
    color: white;
  }

  :global(.dark) .blog-card-description {
    color: rgb(209, 213, 219);
  }

  :global(.dark) .tag {
    background: rgba(var(--accent-rgb), 0.2);
    color: var(--accent);
  }

  :global(.dark) .blog-placeholder {
    background: rgb(31, 41, 55);
    color: rgb(156, 163, 175);
  }

  :global(.dark) .blog-card:hover .blog-placeholder {
    background: rgba(var(--accent-rgb), 0.2);
    color: var(--accent);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .blog-card.featured {
      grid-column: span 1;
    }

    .blog-card.featured .blog-card-image {
      height: 200px;
    }

    .blog-card.featured .blog-card-title {
      font-size: 1.25rem;
    }

    .blog-card-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>
